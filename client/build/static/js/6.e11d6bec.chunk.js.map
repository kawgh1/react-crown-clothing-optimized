{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/signin-signup/signin-signup.styles.jsx","pages/signin-signup/signin-signup.component.jsx"],"names":["subColor","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","value","length","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpContainer","SigninSignupPage"],"mappings":"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","file":"static/js/6.e11d6bec.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst subColor = \"grey\";\r\nconst mainColor = \"black\";\r\n\r\nconst shrinkLabelStyles = css`\r\n    top: -14px;\r\n    font-size: 12px;\r\n    color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n    position: relative;\r\n    margin: 45px 0;\r\n    input[type=\"password\"] {\r\n        letter-spacing: 0.3em;\r\n    }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n    background: none;\r\n    background-color: whitesmoke;\r\n    color: ${subColor};\r\n    font-size: 18px;\r\n    padding: 10px 10px 10px 5px;\r\n    display: block;\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 0;\r\n    border-bottom: 1px solid ${subColor};\r\n    margin: 25px 0;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:focus ~ label {\r\n        ${shrinkLabelStyles}\r\n    }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n    color: ${subColor};\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    left: 5px;\r\n    top: 10px;\r\n    transition: 300ms ease all;\r\n    &.shrink {\r\n        ${shrinkLabelStyles}\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n    GroupContainer,\r\n    FormInputContainer,\r\n    FormInputLabel,\r\n} from \"./form-input.styles\";\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n    <GroupContainer>\r\n        <FormInputContainer onChange={handleChange} {...props} />\r\n\r\n        {/* conditional element */}\r\n        {label ? (\r\n            <FormInputLabel className={props.value.length ? \"shrink\" : \"\"}>\r\n                {label}\r\n            </FormInputLabel>\r\n        ) : null}\r\n    </GroupContainer>\r\n);\r\n\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInContainer = styled.div`\r\n    width: 20rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 3rem auto;\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n    margin: 1px 0;\r\n`;\r\n\r\nexport const ButtonsBarContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport {\r\n    googleSignInStart,\r\n    emailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer,\r\n} from \"./sign-in.styles\";\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <SignInTitle>I already have an account</SignInTitle>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    handleChange={handleChange}\r\n                    value={email}\r\n                    label=\"email\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    label=\"password\"\r\n                    required\r\n                />\r\n                <ButtonsBarContainer>\r\n                    <CustomButton type=\"submit\"> Sign in </CustomButton>\r\n                    <CustomButton\r\n                        type=\"button\"\r\n                        onClick={googleSignInStart}\r\n                        isGoogleSignIn\r\n                    >\r\n                        Sign in with Google\r\n                    </CustomButton>\r\n                </ButtonsBarContainer>\r\n            </form>\r\n        </SignInContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>\r\n        dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignUpContainer = styled.div`\r\n    width: 20rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 3rem auto;\r\n`;\r\n\r\nexport const SignUpTitle = styled.h2`\r\n    margin: 1px 0;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({ displayName, email, password });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <SignUpContainer>\r\n            <SignUpTitle>I do not have an account yet</SignUpTitle>\r\n            <span>Sign up with your email and password</span>\r\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label=\"Display Name\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label=\"Email\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label=\"Password\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    label=\"Confirm Password\"\r\n                    required\r\n                />\r\n                <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n            </form>\r\n        </SignUpContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n    max-width: 850px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 30px auto;\r\n    padding: 5px;\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport \"./signin-signup.styles.scss\";\r\n\r\nimport SignIn from \"../../components/sign-in/sign-in.component\";\r\nimport SignUp from \"../../components/sign-up/sign-up.component\";\r\n\r\nimport { SignInAndSignUpContainer } from \"./signin-signup.styles\";\r\n\r\nconst SigninSignupPage = () => (\r\n    <SignInAndSignUpContainer>\r\n        <SignIn />\r\n        <SignUp />\r\n    </SignInAndSignUpContainer>\r\n);\r\n\r\nexport default SigninSignupPage;\r\n"],"sourceRoot":""}