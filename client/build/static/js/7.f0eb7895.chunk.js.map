{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","price","priceForStripe","label","name","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","process","CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","onClick","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","TotalPrice","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","length","map","id"],"mappings":"wNA+CeA,EA3Cc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtBC,EAAyB,IAARD,EA0BvB,OACI,cAAC,IAAD,CACIE,MAAM,UACNC,KAAK,sBACLC,gBAAc,EACdC,iBAAe,EACfC,MAAM,gEACNC,YAAW,yBAAoBP,GAC/BQ,OAAQP,EACRQ,WAAW,UACXC,MAjCQ,SAACA,GAIbC,IAAM,CACFC,IAAK,gCACLC,OAAQ,OACRC,KAAM,CACFN,OAAQP,EACRS,MAAOA,KAGVK,MAAK,SAACC,GACHC,MAAM,yBAETC,OAAM,SAACC,GACJC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACI,8HAgBRK,UApCUC,iH,wBCJTC,EAAwBC,IAAOC,IAAV,uMAUrBC,EAAiBF,IAAOC,IAAV,mKAYdE,EAAgBH,IAAOI,KAAV,0FAMbC,EAAoBL,YAAOG,EAAPH,CAAH,wIAUjBM,EAAwBN,IAAOC,IAAV,4ECInBM,cAAQ,MANI,SAACC,GAAD,MAAe,CACtCC,UAAW,SAACC,GAAD,OAAUF,EAASG,YAAkBD,KAChDE,QAAS,SAACF,GAAD,OAAUF,EAASI,YAAQF,KACpCG,WAAY,SAACH,GAAD,OAAUF,EAASK,YAAWH,QAG/BH,EA3BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1CnC,EAAoCoC,EAApCpC,KAAMqC,EAA8BD,EAA9BC,SAAUxC,EAAoBuC,EAApBvC,MAAOyC,EAAaF,EAAbE,SAC/B,OACI,eAACjB,EAAD,WACI,cAACG,EAAD,UACI,qBAAKe,IAAKF,EAAUG,IAAI,WAE5B,cAACf,EAAD,UAAgBzB,IAChB,eAAC2B,EAAD,WACI,qBAAKc,QAAS,kBAAMN,EAAWC,IAA/B,oBACA,+BAAOE,IACP,qBAAKG,QAAS,kBAAMP,EAAQE,IAA5B,uBAEJ,eAACX,EAAD,eAAiB5B,KACjB,cAAC+B,EAAD,CAAuBa,QAAS,kBAAMV,EAAUK,IAAhD,0B,QC7BCM,EAAwBpB,IAAOC,IAAV,+QAerBoB,EAA0BrB,IAAOC,IAAV,qKAQvBqB,EAAuBtB,IAAOC,IAAV,yLAapBsB,EAAiBvB,IAAOC,IAAV,iGAMduB,EAAmBxB,IAAOC,IAAV,sHAOhBwB,EAAazB,IAAOC,IAAV,uECgBjByB,EAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,MAGIxB,sBAAQmB,EAARnB,EAnDM,SAAC,GAAD,IAAGqB,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACjB,eAACV,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,UACI,6CAEJ,cAACA,EAAD,UACI,iDAEJ,cAACA,EAAD,UACI,8CAEJ,cAACA,EAAD,UACI,2CAEJ,cAACA,EAAD,UACI,+CAIPM,EAAUI,OAAS,EAChB,qCACKJ,EAAUK,KAAI,SAACnB,GAAD,OACX,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASoB,OAEhC,cAACX,EAAD,UACI,eAACE,EAAD,sBAAqBK,OAEzB,eAACN,EAAD,sEAEI,uBACA,uBAHJ,sBAKI,uBALJ,4BAQA,cAAC,EAAD,CAAsBjD,MAAOuD,OAGjC,8BACI","file":"static/js/7.f0eb7895.chunk.js","sourcesContent":["import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n    const priceForStripe = price * 100;\r\n    const publicKey = process.env.REACT_APP_STRIPE_PUBLIC_KEY;\r\n\r\n    const onToken = (token) => {\r\n        // console.log(token);\r\n        // alert(\"Payment Successful\");\r\n        // send total and token to backend for stripe processing of payment\r\n        axios({\r\n            url: \"http://localhost:5000/payment\",\r\n            method: \"post\",\r\n            data: {\r\n                amount: priceForStripe,\r\n                token: token,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                alert(\"Payment successful\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Payment error: \", error);\r\n                alert(\r\n                    \"Payment Unsuccessful: We encountered an error when processing your payment. Please use the provided test credit card. \"\r\n                );\r\n            });\r\n    };\r\n\r\n    return (\r\n        <StripeCheckout\r\n            label=\"Pay Now\"\r\n            name=\"Crown Clothing Ltd.\"\r\n            billingAddress\r\n            shippingAddress\r\n            image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\r\n            description={`Your total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel=\"Pay Now\"\r\n            token={onToken}\r\n            stripeKey={publicKey}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    min-height: 100px;\r\n    border-bottom: 1px solid darkgrey;\r\n    padding: 6px 0;\r\n    font-size: 20px;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n    width: 24%;\r\n\r\n    padding-right: 5px;\r\n    margin-top: 5px;\r\n\r\n    img {\r\n        max-width: 5rem;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n    width: 22%;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n    display: flex;\r\n    span {\r\n        margin: 0 10px;\r\n    }\r\n    div {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n    cursor: pointer;\r\n\r\n    font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    clearItemFromCart,\r\n    addItem,\r\n    removeItem,\r\n} from \"../../redux/cart/cart.actions\";\r\n\r\nimport {\r\n    CheckoutItemContainer,\r\n    ImageContainer,\r\n    TextContainer,\r\n    QuantityContainer,\r\n    RemoveButtonContainer,\r\n} from \"./checkout-item.styles\";\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n    const { name, imageUrl, price, quantity } = cartItem;\r\n    return (\r\n        <CheckoutItemContainer>\r\n            <ImageContainer>\r\n                <img src={imageUrl} alt=\"item\" />\r\n            </ImageContainer>\r\n            <TextContainer>{name}</TextContainer>\r\n            <QuantityContainer>\r\n                <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                <span>{quantity}</span>\r\n                <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n            </QuantityContainer>\r\n            <TextContainer>${price}</TextContainer>\r\n            <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n                &#10005;\r\n            </RemoveButtonContainer>\r\n        </CheckoutItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    clearItem: (item) => dispatch(clearItemFromCart(item)),\r\n    addItem: (item) => dispatch(addItem(item)),\r\n    removeItem: (item) => dispatch(removeItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n    width: 95%;\r\n    max-width: 1000px;\r\n    min-height: 90vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 50px auto 0;\r\n\r\n    button {\r\n        margin: 10px auto;\r\n        margin-top: 50px;\r\n    }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n    text-transform: capitalize;\r\n    width: 25%;\r\n\r\n    &:nth-last-child(2) {\r\n        width: 23%;\r\n    }\r\n\r\n    &:last-child {\r\n        width: 12%;\r\n    }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n    margin-top: 30px;\r\n    margin-left: auto;\r\n    font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n    text-align: center;\r\n    margin: 40px auto;\r\n    font-size: 24px;\r\n    color: brown;\r\n`;\r\n\r\nexport const TotalPrice = styled.div`\r\n    font-weight: bold;\r\n    color: green;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\n\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\n\r\nimport {\r\n    selectCartItems,\r\n    selectCartTotal,\r\n} from \"../../redux/cart/cart.selectors\";\r\n\r\nimport {\r\n    CheckoutPageContainer,\r\n    CheckoutHeaderContainer,\r\n    HeaderBlockContainer,\r\n    TotalContainer,\r\n    WarningContainer,\r\n    TotalPrice,\r\n} from \"./checkout.styles\";\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n    <CheckoutPageContainer>\r\n        <CheckoutHeaderContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Product</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Description</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Quantity</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Price</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Remove</span>\r\n            </HeaderBlockContainer>\r\n        </CheckoutHeaderContainer>\r\n\r\n        {cartItems.length > 0 ? (\r\n            <>\r\n                {cartItems.map((cartItem) => (\r\n                    <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n                ))}\r\n                <TotalContainer>\r\n                    <TotalPrice>TOTAL: ${total}</TotalPrice>\r\n                </TotalContainer>\r\n                <WarningContainer>\r\n                    *Please use the following test credit card for payments*\r\n                    <br />\r\n                    <br />\r\n                    4242-4242-4242-4242\r\n                    <br />\r\n                    Exp: 04/24 - CVV: 4242\r\n                </WarningContainer>\r\n                <StripeCheckoutButton price={total} />\r\n            </>\r\n        ) : (\r\n            <div>\r\n                <h1>Your cart is empty!</h1>\r\n            </div>\r\n        )}\r\n    </CheckoutPageContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"],"sourceRoot":""}