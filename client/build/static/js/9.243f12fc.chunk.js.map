{"version":3,"sources":["pages/shop/shop.component.jsx"],"names":["CollectionsOverviewContainer","lazy","CollectionPageContainer","connect","dispatch","fetchCollectionsStart","match","useEffect","className","fallback","exact","path","component"],"mappings":"sHAAA,0DAqCMA,EAA+BC,gBAAK,kBACtC,iCAIEC,EAA0BD,gBAAK,kBACjC,iCA6BWE,sBAAQ,MAJI,SAACC,GAAD,MAAe,CACtCC,sBAAuB,kBAAMD,EAASC,mBAG3BF,EA1BE,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,sBAAuBC,EAAY,EAAZA,MAKvC,OAJAC,qBAAU,WACNF,MACD,CAACA,IAGA,qBAAKG,UAAU,YAAf,SACI,eAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,UACI,cAAC,IAAD,CACIC,OAAK,EACLC,KAAI,UAAKL,EAAMK,MACfC,UAAWZ,IAEf,cAAC,IAAD,CACIW,KAAI,UAAKL,EAAMK,KAAX,kBACJC,UAAWV","file":"static/js/9.243f12fc.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\r\n\r\n// shop data\r\n// import SHOP_DATA from './shop.data.js'\r\n\r\n// redux\r\n// import { connect } from 'react-redux'\r\n// import { createStructuredSelector } from 'reselect'\r\n\r\n// // reducers\r\n// import { selectCollections } from '../../redux/shop/shop.selectors'\r\n\r\n// import CollectionPreview from '../../components/collection-preview/collection-preview.component'\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\n// import CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\n// import CollectionPage from \"../collection/collection.component\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\r\n\r\n// Spinner\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\n\r\n// import {\r\n//     firestore,\r\n//     convertCollectionSnapshotToMap,\r\n// } from \"../../firebase/firebase.utils\";\r\n\r\n// ROUTES / SUB PAGES WITHIN SHOP PAGE\r\n// import CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\r\n// import CollectionPageContainer from \"../collection/collection.container\";\r\n\r\n// PERFORMANCE - LAZY LOADED PAGES\r\n// lazy loading means, when the main page loads it will load everything except what is explicitly \"lazy\" loaded\r\nconst CollectionsOverviewContainer = lazy(() =>\r\n    import(\r\n        \"../../components/collections-overview/collections-overview.container\"\r\n    )\r\n);\r\nconst CollectionPageContainer = lazy(() =>\r\n    import(\"../collection/collection.container\")\r\n);\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n    useEffect(() => {\r\n        fetchCollectionsStart();\r\n    }, [fetchCollectionsStart]);\r\n\r\n    return (\r\n        <div className=\"shop-page\">\r\n            <Suspense fallback={<Spinner />}>\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    component={CollectionsOverviewContainer}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    component={CollectionPageContainer}\r\n                />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"],"sourceRoot":""}